name: Build and Publish Docker

on:
  push:
    tags:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      tag:
        description: 'Repository branch or tag'
        required: true

env:
  IMAGE_NAME: 'mock-saml'

jobs:
  build-and-push-docker-image:
    runs-on: ubuntu-latest

    steps:
      - name: Set Tag on Push
        if: github.event_name == 'push'
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Set Tag on Workflow Dispatch
        if: github.event_name == 'workflow_dispatch'
        run: echo "RELEASE_VERSION=${{ github.event.inputs.tag }}" >> $GITHUB_ENV

      - name: Check Out Repo
        uses: actions/checkout@v3
        with:
          ref: ${{env.RELEASE_VERSION}}

      - run: |
          npm install -g json
          MOCK_SAML_VERSION=$(echo $(cat ./package.json) | json version)
          echo "::set-output name=npmversion::$(echo ${MOCK_SAML_VERSION})"
        id: npmversion

      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha7::$(echo ${GITHUB_SHA} | cut -c1-7)"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/release'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set image id
        run: |
          IMAGE_ID=${{ secrets.DOCKER_HUB_USERNAME }}/$IMAGE_NAME
          echo "IMAGE_ID=$IMAGE_ID" >> $GITHUB_ENV

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.IMAGE_ID }}:latest,${{ env.IMAGE_ID }}:${{ steps.slug.outputs.sha7 }},${{ env.IMAGE_ID }}:${{ env.RELEASE_VERSION }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
